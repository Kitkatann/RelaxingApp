uniform mat4 u_MVPMatrix;
uniform mat4 u_ModelMatrix;
uniform vec3 u_CameraPosition;

attribute vec3 a_Position;
attribute vec4 a_Color;
attribute vec3 a_Normal;
varying vec4 v_Color;
void main()
{
    const vec3 lightDir = vec3(0.57, 0.57, 0.57);
    const vec3 ambient = vec3(0.47, 0.32, 0.15);
    const vec3 lightColour = vec3(1.0, 1.0, 0.7);
    const vec3 fogColour = vec3(0.77, 0.77, 0.77);
    const float fogDensity = 0.005;
    float lightFactor = max(dot(a_Normal, lightDir), 0.0);
    vec3 colour = (lightColour * lightFactor + ambient) * a_Color.xyz;
    vec3 worldPosition = (u_ModelMatrix * vec4(a_Position, 1.0)).xyz;
    vec3 d = u_CameraPosition - worldPosition;
    colour = mix(fogColour, colour, 1.0 / (1.0 + length(d) * fogDensity));
    v_Color = vec4(colour, 1.0);
	gl_Position = u_MVPMatrix * vec4(a_Position, 1.0);
}